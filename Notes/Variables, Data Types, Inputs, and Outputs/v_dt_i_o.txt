Lesson 2: Variables, Inputs and Outputs
LESSON I CAN:I CAN create a simple program in C++

By the end of this lesson you will be able to:
- Describe how to write statically typed variables
- Access the C++ standard library to create inputs and outputs
- Describe the stream
- Know when to create constant variables

State Standards: ***This is a UVU CS1410 requirement***

INSTRUCTIONS:
Notes are taken during class and can be taken on paper, on a digital document, or in a specific folder in your programming files (VS Code and Github)

QUESTIONS:
- How are static and dynamically typed variables different?
For a dynamically typed language, your computer will read what data type you are using. However, a statically typed language will not. This makes it run smoother because your program doesn't have to check what data type a variable is.

- REMINDER: What is the difference between instantiating and declaring a variable?
Declaring a variable is just stating its data type and name, without assigning a variable. Initializing the variable (giving it a value) can and should be done on the same line, but does not have to be. You can initialize more than one variable of the same type on one line, but it is not best practice.

- What case type should be used for c++ variables?
For C++ variables, snake_case should be used.

- What is the C++ standard library?
The C++ standard library is iostream.

- How do you access the standard library?
You type '#include <iostream>'

- How do you create an output in C++?
You can create an output by typing std::cout << "string to output"

- How do you create an input in C++?
You should have an output letting the user know they should input something. Then, declare the variable (int var). Then, you can do std::cin << var, which will prompt the user to input the variable value.

- What is the stream in C++?
The stream is information flowing to and from input-output (or I/O) things such as devices, programs, and files.

- What is a constant?
Constants are values in our program that we don't want to change.

- Why do we write constants?
So you can create values that you can't change, such as the value of pi.