Lesson 2: Binary and Searching
LESSON I CAN: I CAN use read and write to binary files and use sequential or binary search

By the end of this lesson you will be able to:
- Use String Streams to get information from within a string
- Read and Write to binary files
- Use a Sequential Search
- Use a Binary Search

State Standards: ***This is a UVU CS1410 requirement***

INSTRUCTIONS:
- Notes are taken during class and can be taken on paper, on a digital document, or in a specific folder in your programming files (VS Code and Github)

QUESTIONS:
- What is a potential issue with converting values to strings without control?
It will give you a specific precision of number no matter how precise your actual number is.

- How can you control the way a value is converted to a string?
You can use stream << fixed << setprecision(x) << y where x is the precision and y is the number you're converting.

- Why is it useful to create a reusable function for converting values to strings?
To save space

- What is parsing in the context of working with strings?
Separating a string by spaces.

- How do you extract specific information from a string in programming?
You use the stringstream to assign the information to a variable, ex. string str = "10, 20"; stringstream stream; stream.fix(str); int num; stream >> num;

- When a title contains a space, which function should you use to read it properly?
You should use getline().

- Why might extra zeros be added to a string when converting a value without control?


- How does controlling the string conversion process benefit your program?


- Give an example scenario where parsing a string would be necessary in a program.
Separating "Terminator 1,1984" into seperate variables is useful.

- When writing to a binary file, what does the first parameter (reinterpret_cast<char*>(&numbers)) represent?


- Why does the binary file only take 12 bytes while the array of integers might be larger?


- What is the main difference between sequential search and binary search?


- In which type of data structure is binary search most efficient?


- What is a key requirement for binary search to work correctly on a list?


- How does sequential search find an item in a list?


- Why is binary search generally faster than sequential search for large, sorted lists?
